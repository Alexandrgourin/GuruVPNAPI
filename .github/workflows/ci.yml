name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: guru_vpn_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Generate Prisma Client
      run: pnpm run db:generate

    - name: Run database migrations
      run: pnpm run db:migrate
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/guru_vpn_test?schema=public"

    - name: Run tests
      run: pnpm test
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/guru_vpn_test?schema=public"
        JWT_SECRET: "test-secret"
        TELEGRAM_BOT_TOKEN: "test-token"
        YOOKASSA_SHOP_ID: "test-shop-id"
        YOOKASSA_SECRET_KEY: "test-secret-key"

    - name: Run linting
      run: pnpm run lint
